// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["filteredRelationCount", "fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Module {
    short       String @id
    name        String
    description String @db.Text
    season      Season
    fileName    String @unique

    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @updatedAt
    degreePrograms DegreeProgram[]
    focuses        Focus[]
    lecturers      Lecturer[]
    reviews        Review[]
    dependencies   Module[]        @relation("ModuleDepends")
    dependencyTo   Module[]        @relation("ModuleDepends")

    @@fulltext([name])
    @@fulltext([description])
}

// Semesterzeit
enum Season {
    Winter
    Summer
    Both
    None
}

// Studiengang
model DegreeProgram {
    short   String   @id
    long    String   @unique
    modules Module[]
}

// Schwerpunkt
model Focus {
    id      Int      @id
    name    String   @unique
    modules Module[]
}

// Dozent
model Lecturer {
    short    String   @id
    fullName String   @unique
    homepage String
    modules  Module[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Rating {
    id          Int                 @id @default(autoincrement())
    label       String
    explanation String
    reviews     RatingOfReview[]

    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @updatedAt
}

model RatingOfReview {
    rating   Rating @relation(fields: [ratingId], references: [id])
    review   Review @relation(fields: [reviewId], references: [id])
    stars    Int
    ratingId Int
    reviewId Int

    @@id([ratingId, reviewId])
}

// Rezension
model Review {
    id          Int    @id @default(autoincrement())
    editToken   String @unique @default(uuid())

    module      Module @relation(fields: [moduleShort], references: [short])
    moduleShort String

    authorName  String?
    text        String
    ratings     RatingOfReview[]

    createdAt   DateTime         @default(now())
    updatedAt   DateTime         @updatedAt
}
